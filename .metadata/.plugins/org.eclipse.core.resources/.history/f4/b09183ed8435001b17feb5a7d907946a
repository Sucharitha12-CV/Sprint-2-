package com.cg.ohds.web;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.cg.ohds.entity.Customer;
import com.cg.ohds.service.ICustomerService;
import com.cg.ohds.service.MapValidationErrorService;
/**
 * this class connects controller and produces output for operation on customer 
 * @author Sucharitha
 *
 */
@RestController
public class CustomerController {
	@Autowired
	ICustomerService customerService;
	@Autowired
	MapValidationErrorService mapValidationErrorService;
	@PostMapping("/customer")
	public ResponseEntity<?> saveTrainee(@Valid @RequestBody Customer customer, BindingResult result) {
		ResponseEntity<?> errorMap=mapValidationErrorService.mapValidationService(result);
		if(errorMap!=null) {
			return errorMap;
		}
		Customer newCustomer=customerService.saveCustomer(customer);
		return new ResponseEntity<Customer>(newCustomer, HttpStatus.CREATED);
		
	}	
	@DeleteMapping("/delete/{customerId}")
	public ResponseEntity<String> deleteCustomer(@PathVariable int customerId){		  
	    customerService.deleteCustomer(customerId); 
	    return new ResponseEntity<String>("Customer with Id : "+customerId+" Deleted!",HttpStatus.OK);
	}	
    @PutMapping("/customer/{customerId}")
	public ResponseEntity<String> update(@PathVariable int customerId, @RequestBody Customer customer) {
	    customerService.updateCustomer(customer); 
	    return new ResponseEntity<String>("Customer Updated!",HttpStatus.OK);
    }
	@GetMapping("/show/{customerId}")
	public ResponseEntity<?> listByCustomerId(@PathVariable int customerId){
		return new ResponseEntity<Customer>(customerService.listCustomerById(customerId),HttpStatus.OK);
	}
	@GetMapping("/all")
	public Iterable<Customer> listAllCustomers(){
		return customerService.listAllCustomers();
	}
}
