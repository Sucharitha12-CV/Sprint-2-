package com.cg.ohds.web;

import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import com.cg.ohds.service.ICartService;

@RunWith(SpringRunner.class)
@WebMvcTest(value = CartController.class)
public class TestCartController {
	@Autowired
    private MockMvc mockMvc;
	@MockBean
	private ICartService userService;
	@Test
	public void testSaveCustomer() throws Exception{
	        String URI = "/cart";;
	        HealthModule health = new HealthModule();
	        health.setMedicalId(101);
	        health.setAadharNo("312345678910");
		    health.setName("priya");
		    health.setAddress("Tirupati");
	        health.setPhoneNo("7123456789");
	        health.setAge(28);
	        String jsonInput = this.converttoJson(health);

	        Mockito.when(userService.saveUserDetails(Mockito.any(HealthModule.class))).thenReturn(health);
	        MvcResult mvcResult = this.mockMvc.perform(MockMvcRequestBuilders.post(URI).accept(MediaType.APPLICATION_JSON).content(jsonInput).contentType(MediaType.APPLICATION_JSON))
	                .andReturn();
	        MockHttpServletResponse mockHttpServletResponse = mvcResult.getResponse();
	        String jsonOutput = mockHttpServletResponse.getContentAsString();
	        assertThat(jsonInput).isEqualTo(jsonOutput);
	        Assert.assertEquals(HttpStatus.OK.value(), mockHttpServletResponse.getStatus());
	}

}
